{"version":3,"file":"static/js/138.49c6971a.chunk.js","mappings":"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","sources":["hooks/useControls.ts","componenet/Car.tsx","hooks/useWheels.tsx","componenet/Ground.tsx","componenet/ColliderBox.tsx","componenet/Ramp.tsx","componenet/Track.tsx","App.tsx","Game.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useControls = (vehicleApi: any, chassisApi: any) => {\r\n  let [controls, setControls] = useState<any>({});\r\n\r\n  useEffect(() => {\r\n    const keyDownPressHandler = (e: { key: string }) => {\r\n      setControls((controls: any) => ({\r\n        ...controls,\r\n        [e.key.toLowerCase()]: true,\r\n      }));\r\n    };\r\n\r\n    const keyUpPressHandler = (e: { key: string }) => {\r\n      setControls((controls: any) => ({\r\n        ...controls,\r\n        [e.key.toLowerCase()]: false,\r\n      }));\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", keyDownPressHandler);\r\n    window.addEventListener(\"keyup\", keyUpPressHandler);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", keyDownPressHandler);\r\n      window.removeEventListener(\"keyup\", keyUpPressHandler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!vehicleApi || !chassisApi) return;\r\n\r\n    if (controls.w) {\r\n      vehicleApi.applyEngineForce(150, 2);\r\n      vehicleApi.applyEngineForce(150, 3);\r\n    } else if (controls.s) {\r\n      vehicleApi.applyEngineForce(-150, 2);\r\n      vehicleApi.applyEngineForce(-150, 3);\r\n    } else {\r\n      vehicleApi.applyEngineForce(0, 2);\r\n      vehicleApi.applyEngineForce(0, 3);\r\n    }\r\n\r\n    if (controls.a) {\r\n      vehicleApi.setSteeringValue(0.35, 2);\r\n      vehicleApi.setSteeringValue(0.35, 3);\r\n      vehicleApi.setSteeringValue(-0.1, 0);\r\n      vehicleApi.setSteeringValue(-0.1, 1);\r\n    } else if (controls.d) {\r\n      vehicleApi.setSteeringValue(-0.35, 2);\r\n      vehicleApi.setSteeringValue(-0.35, 3);\r\n      vehicleApi.setSteeringValue(0.1, 0);\r\n      vehicleApi.setSteeringValue(0.1, 1);\r\n    } else {\r\n      for (let i = 0; i < 4; i++) {\r\n        vehicleApi.setSteeringValue(0, i);\r\n      }\r\n    }\r\n\r\n    if (controls.arrowdown)\r\n      chassisApi.applyLocalImpulse([0, -5, 0], [0, 0, +1]);\r\n    if (controls.arrowup) chassisApi.applyLocalImpulse([0, -5, 0], [0, 0, -1]);\r\n    if (controls.arrowleft)\r\n      chassisApi.applyLocalImpulse([0, -5, 0], [-0.5, 0, 0]);\r\n    if (controls.arrowright)\r\n      chassisApi.applyLocalImpulse([0, -5, 0], [+0.5, 0, 0]);\r\n\r\n    if (controls.r) {\r\n      chassisApi.position.set(-1.5, 0.5, 3);\r\n      chassisApi.velocity.set(0, 0, 0);\r\n      chassisApi.angularVelocity.set(0, 0, 0);\r\n      chassisApi.rotation.set(0, 0, 0);\r\n    }\r\n  }, [controls, vehicleApi, chassisApi]);\r\n\r\n  return controls;\r\n};\r\n\r\nexport default useControls;\r\n","import { useBox, useRaycastVehicle } from \"@react-three/cannon\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\nimport { Quaternion, Vector3 } from \"three\";\r\nimport useControls from \"../hooks/useControls\";\r\nimport { useWheels } from \"../hooks/useWheels\";\r\n\r\nconst Car: FC<{ thirdPerson: boolean; mesh: any }> = ({\r\n  thirdPerson,\r\n  mesh,\r\n}) => {\r\n  const position: [x: number, y: number, z: number] = [-1.5, 0.5, 3];\r\n  const width = 0.15;\r\n  const height = 0.07;\r\n  const front = 0.15;\r\n  const wheelRadius = 0.05;\r\n\r\n  const chassisBodyArgs: [x: number, y: number, z: number] = [\r\n    width,\r\n    height,\r\n    front * 2,\r\n  ];\r\n\r\n  const [chassisBody, chassisApi] = useBox(\r\n    () => ({\r\n      allowSleep: false,\r\n      args: chassisBodyArgs,\r\n      mass: 150,\r\n      position,\r\n    }),\r\n    useRef(null)\r\n  );\r\n\r\n  useEffect(() => {\r\n    mesh.scale.set(0.0012, 0.0012, 0.0012);\r\n    mesh.children[0].position.set(-365, -18, -67);\r\n  }, [mesh]);\r\n\r\n  const [wheels, wheelInfos] = useWheels(width, height, front, wheelRadius);\r\n  const [vehicle, vehicleApi] = useRaycastVehicle(\r\n    () => ({\r\n      chassisBody,\r\n      //   @ts-ignore\r\n      wheelInfos,\r\n      //   @ts-ignore\r\n      wheels,\r\n    }),\r\n    useRef(null)\r\n  );\r\n\r\n  useControls(vehicleApi, chassisApi);\r\n\r\n  useFrame((state) => {\r\n    if (!thirdPerson || !chassisBody.current) return;\r\n\r\n    let position = new Vector3(0, 0, 0);\r\n    position.setFromMatrixPosition(chassisBody.current.matrixWorld);\r\n\r\n    let quaternion = new Quaternion(0, 0, 0, 0);\r\n    quaternion.setFromRotationMatrix(chassisBody.current.matrixWorld);\r\n\r\n    let wDir = new Vector3(0, 0, 1);\r\n    wDir.applyQuaternion(quaternion);\r\n    wDir.normalize();\r\n\r\n    let cameraPosition = position\r\n      .clone()\r\n      .add(wDir.clone().multiplyScalar(1).add(new Vector3(0, 0.3, 0)));\r\n\r\n    wDir.add(new Vector3(0, 0.2, 0));\r\n    state.camera.position.copy(cameraPosition);\r\n    state.camera.lookAt(position);\r\n  });\r\n\r\n  return (\r\n    <group\r\n      // @ts-ignore\r\n      ref={vehicle}\r\n      name=\"vehicle\"\r\n    >\r\n      <group\r\n        // @ts-ignore\r\n        ref={chassisBody}\r\n        name=\"chassisBody\"\r\n      >\r\n        <primitive\r\n          // @ts-ignore\r\n          object={mesh}\r\n          rotation-y={Math.PI}\r\n          position={[0, -0.09, 0]}\r\n        />\r\n      </group>\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Car;\r\n","import { useCompoundBody } from \"@react-three/cannon\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const useWheels = (\r\n  width: number,\r\n  height: number,\r\n  front: number,\r\n  radius: any\r\n) => {\r\n  const wheels = [useRef(null), useRef(null), useRef(null), useRef(null)];\r\n\r\n  const wheelInfo = {\r\n    radius,\r\n    directionLocal: [0, -1, 0],\r\n    axleLocal: [1, 0, 0],\r\n    suspensionStiffness: 60,\r\n    suspensionRestLength: 0.1,\r\n    frictionSlip: 5,\r\n    dampingRelaxation: 2.3,\r\n    dampingCompression: 4.4,\r\n    maxSuspensionForce: 100000,\r\n    rollInfluence: 0.01,\r\n    maxSuspensionTravel: 0.1,\r\n    customSlidingRotationalSpeed: -30,\r\n    useCustomSlidingRotationalSpeed: true,\r\n  };\r\n\r\n  const wheelInfos = [\r\n    {\r\n      ...wheelInfo,\r\n      chassisConnectionPointLocal: [-width * 0.65, height * 0.4, front],\r\n      isFrontWheel: true,\r\n    },\r\n    {\r\n      ...wheelInfo,\r\n      chassisConnectionPointLocal: [width * 0.65, height * 0.4, front],\r\n      isFrontWheel: true,\r\n    },\r\n    {\r\n      ...wheelInfo,\r\n      chassisConnectionPointLocal: [-width * 0.65, height * 0.4, -front],\r\n      isFrontWheel: false,\r\n    },\r\n    {\r\n      ...wheelInfo,\r\n      chassisConnectionPointLocal: [width * 0.65, height * 0.4, -front],\r\n      isFrontWheel: false,\r\n    },\r\n  ];\r\n\r\n  const propsFunc = () => ({\r\n    collisionFilterGroup: 0,\r\n    mass: 1,\r\n    shapes: [\r\n      {\r\n        args: [wheelInfo.radius, wheelInfo.radius, 0.015, 16],\r\n        rotation: [0, 0, -Math.PI / 2],\r\n        type: \"Cylinder\",\r\n      },\r\n    ],\r\n    type: \"Kinematic\",\r\n  });\r\n\r\n  // @ts-ignore\r\n  useCompoundBody(propsFunc, wheels[0]);\r\n  // @ts-ignore\r\n  useCompoundBody(propsFunc, wheels[1]);\r\n  // @ts-ignore\r\n  useCompoundBody(propsFunc, wheels[2]);\r\n  // @ts-ignore\r\n  useCompoundBody(propsFunc, wheels[3]);\r\n\r\n  return [wheels, wheelInfos];\r\n};\r\n","import { usePlane } from \"@react-three/cannon\";\r\nimport { MeshReflectorMaterial } from \"@react-three/drei\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\nimport { BufferAttribute, Mesh } from \"three\";\r\n\r\nconst Ground: FC<{\r\n  gridMap: any;\r\n  aoMap: any;\r\n  alphaMap: any;\r\n}> = ({ alphaMap, aoMap, gridMap }) => {\r\n  usePlane(\r\n    () => ({\r\n      type: \"Static\",\r\n      rotation: [-Math.PI / 2, 0, 0],\r\n    }),\r\n    useRef(null)\r\n  );\r\n\r\n  const meshRef = useRef<Mesh>(null);\r\n  const meshRef2 = useRef<Mesh>(null);\r\n\r\n  useEffect(() => {\r\n    if (!gridMap) return;\r\n\r\n    gridMap.anisotropy = 16;\r\n  }, [gridMap]);\r\n\r\n  useEffect(() => {\r\n    if (!meshRef.current || !meshRef2.current) return;\r\n\r\n    var uvs = meshRef.current.geometry.attributes.uv.array;\r\n    meshRef.current.geometry.setAttribute(\"uv2\", new BufferAttribute(uvs, 2));\r\n\r\n    var uvs2 = meshRef2.current.geometry.attributes.uv.array;\r\n    meshRef2.current.geometry.setAttribute(\"uv2\", new BufferAttribute(uvs2, 2));\r\n  }, [meshRef, meshRef2]);\r\n\r\n  return (\r\n    <>\r\n      <mesh\r\n        ref={meshRef2}\r\n        position={[-2.285, -0.01, -1.325]}\r\n        rotation-x={-Math.PI * 0.5}\r\n      >\r\n        <planeGeometry args={[12, 12]} />\r\n        <meshBasicMaterial\r\n          opacity={0.325}\r\n          alphaMap={gridMap}\r\n          transparent={true}\r\n          color={\"white\"}\r\n        />\r\n      </mesh>\r\n\r\n      <mesh\r\n        ref={meshRef}\r\n        position={[-2.285, -0.015, -1.325]}\r\n        rotation-x={-Math.PI * 0.5}\r\n        rotation-z={-0.079}\r\n      >\r\n        <circleGeometry args={[6.12, 50]} />\r\n        <MeshReflectorMaterial\r\n          aoMap={aoMap}\r\n          alphaMap={alphaMap}\r\n          transparent={true}\r\n          color={[0.5, 0.5, 0.5]}\r\n          envMapIntensity={0.35}\r\n          metalness={0.05}\r\n          roughness={0.4}\r\n          dithering={true}\r\n          blur={[1024, 512]} // Blur ground reflections (width, heigt), 0 skips blur\r\n          mixBlur={3} // How much blur mixes with surface roughness (default = 1)\r\n          mixStrength={30} // Strength of the reflections\r\n          mixContrast={1} // Contrast of the reflections\r\n          resolution={1024} // Off-buffer resolution, lower=faster, higher=better quality, slower\r\n          mirror={0} // Mirror environment, 0 = texture colors, 1 = pick up env colors\r\n          depthScale={0} // Scale the depth factor (0 = no depth, default = 0)\r\n          minDepthThreshold={0.9} // Lower edge for the depthTexture interpolation (default = 0)\r\n          maxDepthThreshold={1} // Upper edge for the depthTexture interpolation (default = 0)\r\n          depthToBlurRatioBias={0.25} // Adds a bias factor to the depthTexture before calculating the blur amount [bl\r\n          reflectorOffset={0.02} // Offsets the virtual camera that projects the reflection. Useful when the reflective\r\n        ></MeshReflectorMaterial>\r\n      </mesh>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ground;\r\n","import { useBox } from \"@react-three/cannon\";\r\n\r\nconst debug = false;\r\n\r\nconst ColliderBox = ({ position, scale }: { position: any; scale: any }) => {\r\n  useBox(() => ({\r\n    args: scale,\r\n    position,\r\n    type: \"Static\",\r\n  }));\r\n\r\n  return debug ? (\r\n    <mesh position={position}>\r\n      <boxGeometry args={scale} />\r\n      <meshBasicMaterial transparent={true} opacity={0.25} />\r\n    </mesh>\r\n  ) : null;\r\n};\r\n\r\nexport default ColliderBox;\r\n","import { useTrimesh } from \"@react-three/cannon\";\r\nimport { FC, useRef } from \"react\";\r\n\r\nconst Ramp: FC<{ rampResult: any }> = ({ rampResult: result }) => {\r\n  //   @ts-ignore\r\n  const geometry = result.scene.children[0].geometry;\r\n\r\n  const vertices = geometry.attributes.position.array;\r\n  const indices = geometry.index.array;\r\n\r\n  useTrimesh(\r\n    () => ({\r\n      args: [vertices, indices],\r\n      mass: 0,\r\n      type: \"Static\",\r\n    }),\r\n    useRef(null)\r\n  );\r\n\r\n  return null;\r\n};\r\n\r\nexport default Ramp;\r\n","import { FC, useEffect } from \"react\";\r\nimport ColliderBox from \"./ColliderBox\";\r\nimport Ramp from \"./Ramp\";\r\n\r\nconst Track: FC<{ result: any; colorMap: any; rampResult: any }> = ({\r\n  colorMap,\r\n  result,\r\n  rampResult,\r\n}) => {\r\n  useEffect(() => {\r\n    if (colorMap) {\r\n      colorMap.anisotropy = 16;\r\n    }\r\n  }, [colorMap]);\r\n\r\n  let geometry = result.scene.children[0].geometry;\r\n\r\n  return (\r\n    <>\r\n      <mesh geometry={geometry}>\r\n        <meshBasicMaterial toneMapped={false} map={colorMap} />\r\n      </mesh>\r\n\r\n      <ColliderBox position={[1.75, 0, 0.5]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[2.5, 0, -1.4]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[0.6, 0, -3.8]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[-1.95, 0, -5.18]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[-5.55, 0, -3.05]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[-4.4, 0, -1.77]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[-7.03, 0, -0.76]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[-4.75, 0, 2.73]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[-3.05, 0, 3.4]} scale={[0.3, 1, 0.3]} />\r\n      <ColliderBox position={[-0.83, 0, 3.2]} scale={[0.3, 1, 0.3]} />\r\n\r\n      <ColliderBox position={[-1.85, 0, 0.385]} scale={[0.05, 1, 0.13]} />\r\n      <ColliderBox position={[-1.85, 0, -0.385]} scale={[0.05, 1, 0.13]} />\r\n      <ColliderBox position={[-2.28, 0, 0.385]} scale={[0.05, 1, 0.13]} />\r\n      <ColliderBox position={[-2.28, 0, -0.385]} scale={[0.05, 1, 0.13]} />\r\n      <ColliderBox position={[-4.39, 0, 1.125]} scale={[0.13, 1, 0.13]} />\r\n      <ColliderBox position={[-4.39, 0, 1.9]} scale={[0.13, 1, 0.13]} />\r\n\r\n      <ColliderBox position={[-2.86, 0, -0.9]} scale={[0.35, 1, 0.35]} />\r\n      <ColliderBox position={[-3.33, 0, -0.9]} scale={[0.35, 1, 0.35]} />\r\n      <ColliderBox position={[0.41, 0, 2]} scale={[0.35, 1, 0.35]} />\r\n\r\n      <ColliderBox position={[-2.3, 0, -2.76]} scale={[1.37, 1, 1.09]} />\r\n\r\n      <ColliderBox position={[-3.08, 0, 0.89]} scale={[0.36, 1, 0.03]} />\r\n      <ColliderBox position={[-2.53, 0, 0.89]} scale={[0.36, 1, 0.03]} />\r\n\r\n      <ColliderBox position={[-4.53, 0, -0.65]} scale={[0.1, 0.5, 0.1]} />\r\n      <ColliderBox position={[-4.15, 0, -0.67]} scale={[0.1, 0.5, 0.1]} />\r\n      <ColliderBox position={[-4.9, 0, -0.58]} scale={[0.1, 0.5, 0.1]} />\r\n      <ColliderBox position={[-0.3, 0, 1]} scale={[0.1, 0.5, 0.1]} />\r\n\r\n      <Ramp rampResult={rampResult} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import {\r\n  Environment,\r\n  OrbitControls,\r\n  PerspectiveCamera,\r\n} from \"@react-three/drei\";\r\nimport { useLoader } from \"@react-three/fiber\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { TextureLoader } from \"three\";\r\nimport { GLTFLoader } from \"three-stdlib\";\r\nimport Car from \"./componenet/Car\";\r\nimport Ground from \"./componenet/Ground\";\r\nimport Track from \"./componenet/Track\";\r\n\r\nconst App = () => {\r\n  const [thirdPerson, setThirdPerson] = useState(false);\r\n  const [, setCameraPosition] = useState([-6, 3.9, 6.21]);\r\n\r\n  let mesh = useLoader(\r\n    GLTFLoader,\r\n    process.env.PUBLIC_URL + \"/models/car.glb\"\r\n  ).scene;\r\n\r\n  const gridMap = useLoader(\r\n    TextureLoader,\r\n    process.env.PUBLIC_URL + \"/textures/grid.png\"\r\n  );\r\n\r\n  const aoMap = useLoader(\r\n    TextureLoader,\r\n    process.env.PUBLIC_URL + \"/textures/ground-ao.png\"\r\n  );\r\n\r\n  const alphaMap = useLoader(\r\n    TextureLoader,\r\n    process.env.PUBLIC_URL + \"/textures/alpha-map.png\"\r\n  );\r\n\r\n  const result = useLoader(\r\n    GLTFLoader,\r\n    process.env.PUBLIC_URL + \"/models/track.glb\"\r\n  );\r\n\r\n  const colorMap = useLoader(\r\n    TextureLoader,\r\n    process.env.PUBLIC_URL + \"/textures/track.png\"\r\n  );\r\n\r\n  const rampResult = useLoader(\r\n    GLTFLoader,\r\n    process.env.PUBLIC_URL + \"/models/ramp.glb\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    function keydownHandler(e: { key: string }) {\r\n      if (e.key === \"k\") {\r\n        // random is necessary to trigger a state change\r\n        if (thirdPerson)\r\n          setCameraPosition([-6, 3.9, 6.21 + Math.random() * 0.01]);\r\n        setThirdPerson(!thirdPerson);\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", keydownHandler);\r\n    return () => window.removeEventListener(\"keydown\", keydownHandler);\r\n  }, [thirdPerson]);\r\n\r\n  return (\r\n    <>\r\n      <Environment\r\n        files={process.env.PUBLIC_URL + \"/textures/envmap.hdr\"}\r\n        // @ts-ignore\r\n        background={\"both\"}\r\n      />\r\n      {/* @ts-ignore */}\r\n      <PerspectiveCamera makeDefault position={[-6, 3.9, 6.21]} fov={40} />\r\n      {!thirdPerson && <OrbitControls target={[-2.64, -0.71, 0.03]} />}\r\n\r\n      <Ground gridMap={gridMap} aoMap={aoMap} alphaMap={alphaMap} />\r\n      <Track rampResult={rampResult} result={result} colorMap={colorMap} />\r\n      <Car thirdPerson={thirdPerson} mesh={mesh} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { Physics } from \"@react-three/cannon\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport App from \"./App\";\r\nimport \"./assets/style.css\";\r\n\r\nconst Game = () => {\r\n  return (\r\n    <>\r\n      <Canvas>\r\n        <Physics broadphase=\"SAP\" gravity={[0, -2.6, 0]}>\r\n          <App />\r\n        </Physics>\r\n      </Canvas>\r\n\r\n      <div className=\"controls\" style={{ opacity: 0.5 }}>\r\n        <p>press w a s d to move</p>\r\n        <p>press k to swap camera</p>\r\n        <p>press r to reset</p>\r\n        <p>press arrows for flips</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"names":["vehicleApi","chassisApi","_useState","useState","_useState2","_slicedToArray","controls","setControls","useEffect","keyDownPressHandler","e","_objectSpread","_defineProperty","key","toLowerCase","keyUpPressHandler","window","addEventListener","removeEventListener","w","applyEngineForce","s","a","setSteeringValue","d","i","arrowdown","applyLocalImpulse","arrowup","arrowleft","arrowright","r","position","set","velocity","angularVelocity","rotation","_ref","thirdPerson","mesh","chassisBodyArgs","front","_useBox","useBox","allowSleep","args","mass","useRef","_useBox2","chassisBody","scale","children","_useWheels","width","height","radius","wheels","wheelInfo","directionLocal","axleLocal","suspensionStiffness","suspensionRestLength","frictionSlip","dampingRelaxation","dampingCompression","maxSuspensionForce","rollInfluence","maxSuspensionTravel","customSlidingRotationalSpeed","useCustomSlidingRotationalSpeed","wheelInfos","chassisConnectionPointLocal","isFrontWheel","propsFunc","collisionFilterGroup","shapes","Math","PI","type","useCompoundBody","useWheels","_useWheels2","_useRaycastVehicle","useRaycastVehicle","_useRaycastVehicle2","vehicle","useControls","useFrame","state","current","Vector3","setFromMatrixPosition","matrixWorld","quaternion","Quaternion","setFromRotationMatrix","wDir","applyQuaternion","normalize","cameraPosition","clone","add","multiplyScalar","camera","copy","lookAt","_jsx","ref","name","object","alphaMap","aoMap","gridMap","usePlane","meshRef","meshRef2","anisotropy","uvs","geometry","attributes","uv","array","setAttribute","BufferAttribute","uvs2","_jsxs","_Fragment","opacity","transparent","color","MeshReflectorMaterial","envMapIntensity","metalness","roughness","dithering","blur","mixBlur","mixStrength","mixContrast","resolution","mirror","depthScale","minDepthThreshold","maxDepthThreshold","depthToBlurRatioBias","reflectorOffset","rampResult","scene","vertices","indices","index","useTrimesh","colorMap","result","toneMapped","map","ColliderBox","Ramp","setThirdPerson","_useState3","setCameraPosition","useLoader","GLTFLoader","process","TextureLoader","keydownHandler","random","Environment","files","background","PerspectiveCamera","makeDefault","fov","OrbitControls","target","Ground","Track","Car","Canvas","Physics","broadphase","gravity","App","className","style"],"sourceRoot":""}